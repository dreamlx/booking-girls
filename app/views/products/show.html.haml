.container-fluid
  .shop-info-text
    
    %h1
      = h_product_nav()
      Â» 
      = t(@product.category.name, scope: :category) unless @product.category.nil?
    -#%span.label.label-important
    -#  = t(:price, price: @product.price, scope: :views)
    %span.label.label-info
      = t(:designer, designer_name: @product.designer, scope: :views)
    %span.label.label-info
      = t(:favor, favor: @product.favor_count, scope: :views)
    %span.label.label-info
      = t(:comment, comment: @product.comments.count, scope: :views)
      
  .row-fluid
    .span9
      %p
        .pikachoose
          %ul#pikame
            - @product.pics.each do |pic|
              %li
                %a{:href => pic.photo.url}
                  = image_tag pic.photo.thumbnail.url
                %span
                  = pic.title||"3DTZK"
      %p= @product.desc
      %p= @product.size unless @product.size.blank?

      %h1.comments
        = t(:comments, scope: :views)
      .comments-container
        %p
          = render "/comments/leave_comment"
        %hr
        - unless @product.comments.empty?
          = render partial: "/comments/comment", collection: @product.comments
    .span3        
      %p{:id => "favor"}
        -unless current_user and @product.check_favor(current_user) 
          = button_to t(:add_favor, scope: :views), add_favor_product_path, |
          :method => :put, :class => "btn btn-warning"
        -else
          = button_to t(:remove_favor, scope: :views), cancel_favor_product_path, |
          :method => :put, :class => "btn btn-danger"
      %p 
        %a.btn.btn-primary{:href => @product.model3d.url }
          = t(:download_model, scope: :views)
      - if current_user and @product.owner?(current_user)
        %hr      
        %p= link_to 'Edit', edit_product_path(@product), class: "btn" 
        %p= link_to 'Destroy', @product, method: :delete, data: { confirm: 'Are you sure?' }, class: "btn"
  


